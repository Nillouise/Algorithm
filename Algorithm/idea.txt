dp
    有些以指数增长的状态，可能能被化简，比如说他们的位置顺序不重要之类。
    分组背包，树上的分组背包，按子树和父树算出新的父树。
    一些时间应该也可以是状态的一部分

看到区间要想到前缀和优化。


练过的算法
小算法：
	二分、离散化、扫描线、单调栈（队列）、gcd的性质（递减很快）、组合数学（所有解减去不可行解）、因子大小sqrt、双指针法、位操作符（^,&,|，位之间是不会有影响的），想特例、分情况处理、前缀和思想、区间覆盖点（算区间有多少个），逆元、离线、转换和隐藏某些条件、next_permutation做出C(P,K)的效果、注意题目里的限制条件可能成为线索、截断递增的巨大数字、看到区间想到前缀和

大算法
二分图（最小顶点覆盖等于最大匹配、（完全背包、数位、概率、期待倒推、状态压缩、记忆化搜索、dp状态表示的化简）dp、LIS、线段树、树状数组（最大最小指）、欧拉图（+拓扑排序）、随机化、贪心（可交换性）、打表、nim游戏、并查集的补集、转换不同枚举的对象、图论中由点考虑转换边考虑、分治、高性能（剪枝、前缀和、二分、分治）、trie树、kmp、回文串dp、LCA+倍增、Dij、数学递归找规律，算数学公式、卡特兰数、kmp、期待公式（ d = p*d + p1*d1+p2*d2）